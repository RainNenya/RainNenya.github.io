<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Python3 基础语法(下)</title>
      <link href="/2019/08/04/python3-ji-chu-yu-fa-xia/"/>
      <url>/2019/08/04/python3-ji-chu-yu-fa-xia/</url>
      
        <content type="html"><![CDATA[<h3 id="输入输出"><a href="#输入输出" class="headerlink" title="输入输出"></a>输入输出</h3><h4 id="input-输入"><a href="#input-输入" class="headerlink" title="input 输入"></a>input 输入</h4><blockquote><p>使用 input，执行程序后程序会等待用户输入</p></blockquote><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># input 输入的都是字符串</span>weight <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"please input your weight:"</span><span class="token punctuation">)</span>weight</code></pre><p>please input your weight:62.5</p><p>‘62.5’</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 利用float函数将字符串转化成浮点数</span>weight <span class="token operator">=</span> float<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">"please input your weight:"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>weight</code></pre><p>please input your weight:62.5</p><p>62.5</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 利用eval函数将输入的字符串作为表达式进行计算</span>age <span class="token operator">=</span> eval<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">"please input your age:"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>age</code></pre><p>please input your age:2018-1999</p><p>19</p><h4 id="print-输出"><a href="#print-输出" class="headerlink" title="print 输出"></a>print 输出</h4><blockquote><p>print 默认输出是换行的，如果要实现不换行需要在变量末尾加上 <strong>end=””</strong></p></blockquote><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 输出用print</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'your weight is:'</span><span class="token punctuation">,</span>weight<span class="token punctuation">)</span></code></pre><p>your weight is: 62.5</p><h3 id="导入模块"><a href="#导入模块" class="headerlink" title="导入模块"></a>导入模块</h3><blockquote><p>在 Python 用 <code>import</code> 或者 <code>from...import</code> 来导入相应的模块。</p></blockquote><ul><li>将整个模块导入</li></ul><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">### 以普通方式导入</span><span class="token keyword">import</span> datetimedatetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>today<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>datetime.datetime(2019, 8, 4, 8, 47, 32, 247842)</p><ul><li>从某个模块中导入某个函数</li></ul><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">### 导入模块中某个对象</span><span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetimedatetime<span class="token punctuation">.</span>today<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>datetime.datetime(2019, 8, 4, 8, 48, 52, 171114)</p><ul><li>将某个模块中的全部函数导入</li></ul><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">### 导入模块中全部对象</span><span class="token keyword">from</span> datetime <span class="token keyword">import</span> <span class="token operator">*</span>datetime<span class="token punctuation">.</span>today<span class="token punctuation">(</span><span class="token punctuation">)</span>date<span class="token punctuation">(</span><span class="token number">2018</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span></code></pre><p>datetime.date(2018, 1, 1)</p><ul><li>将整个模块导入并为该模块起个别名</li></ul><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">### 以简写方式导入模块</span><span class="token keyword">import</span> datetime <span class="token keyword">as</span> dtdt<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>today<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>datetime.datetime(2019, 8, 4, 8, 50, 59, 799972)</p><h3 id="算术运算"><a href="#算术运算" class="headerlink" title="算术运算"></a>算术运算</h3><table><thead><tr><th style="text-align:left">运算符</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">+</td><td style="text-align:left">加 - 两个对象相加</td></tr><tr><td style="text-align:left">-</td><td style="text-align:left">减 - 得到负数或是一个数减去另一个数</td></tr><tr><td style="text-align:left">*</td><td style="text-align:left">乘 - 两个数相乘或是返回一个被重复若干次的字符串</td></tr><tr><td style="text-align:left">/</td><td style="text-align:left">除 - x 除以 y</td></tr><tr><td style="text-align:left">%</td><td style="text-align:left">取模 - 返回除法的余数</td></tr><tr><td style="text-align:left">**</td><td style="text-align:left">幂 - 返回x的y次幂</td></tr><tr><td style="text-align:left">//</td><td style="text-align:left">取整除 - 向下取接近除数的整数</td></tr></tbody></table><h4 id="基本数学运算"><a href="#基本数学运算" class="headerlink" title="基本数学运算"></a>基本数学运算</h4><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">4</span><span class="token operator">+</span><span class="token number">5</span><span class="token operator">*</span><span class="token number">2</span> <span class="token comment" spellcheck="true">#四则运算</span>Out<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">31</span></code></pre><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token operator">**</span><span class="token number">10</span> <span class="token comment" spellcheck="true">#乘方运算</span>Out<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">1024</span></code></pre><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">7</span><span class="token operator">%</span><span class="token number">5</span> <span class="token comment" spellcheck="true">#求余运算</span>Out<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">2</span></code></pre><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">7</span><span class="token operator">//</span><span class="token number">5</span> <span class="token comment" spellcheck="true">#地板除法</span>Out<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">1</span></code></pre><h4 id="Math-模块中的函数"><a href="#Math-模块中的函数" class="headerlink" title="Math 模块中的函数"></a>Math 模块中的函数</h4><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">import</span> mathIn <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> math<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>pi<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#三角函数</span>Out<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">1.0</span></code></pre><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> abs<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#绝对值</span>Out<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">1</span></code></pre><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> math<span class="token punctuation">.</span>log<span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#对数函数</span>Out<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">1.0</span></code></pre><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span> math<span class="token punctuation">.</span>factorial<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#阶乘</span>Out<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">120</span></code></pre><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> <span class="token number">2j</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">-</span> <span class="token number">1j</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#复数</span>Out<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token operator">+</span><span class="token number">1j</span><span class="token punctuation">)</span></code></pre><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">:</span> complex<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">-</span> <span class="token number">1j</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token number">0.6</span><span class="token operator">+</span><span class="token number">0.8j</span><span class="token punctuation">)</span></code></pre><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">:</span> math<span class="token punctuation">.</span>factorial<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">402387260077093773543702433923003985719374864210714632543799910429938512398629020592044208486969404800479988610197196058631666872994808558901323829669944590997424504087073759918823627727188732519779505950995276120874975462497043601418278094646496291056393887437886487337119181045825783647849977012476632889835955735432513185323958463075557409114262417474349347553428646576611667797396668820291207379143853719588249808126867838374559731746136085379534524221586593201928090878297308431392844403281231558611036976801357304216168747609675871348312025478589320767169132448426236131412508780208000261683151027341827977704784635868170164365024153691398281264810213092761244896359928705114964975419909342221566832572080821333186116811553615836546984046708975602900950537616475847728421889679646244945160765353408198901385442487984959953319101723355556602139450399736280750137837615307127761926849034352625200015888535147331611702103968175921510907788019393178114194545257223865541461062892187960223838971476088506276862967146674697562911234082439208160153780889893964518263243671616762179168909779911903754031274622289988005195444414282012187361745992642956581746628302955570299024324153181617210465832036786906117260158783520751516284225540265170483304226143974286933061690897968482590125458327168226458066526769958652682272807075781391858178889652208164348344825993266043367660176999612831860788386150279465955131156552036093988180612138558600301435694527224206344631797460594682573103790084024432438465657245014402821885252470935190620929023136493273497565513958720559654228749774011413346962715422845862377387538230483865688976461927383814900140767310446640259899490222221765904339901886018566526485061799702356193897017860040811889729918311021171229845901641921068884387121855646124960798722908519296819372388642614839657382291123125024186649353143970137428531926649875337218940694281434118520158014123344828015051399694290153483077644569099073152433278288269864602789864321139083506217095002597389863554277196742822248757586765752344220207573630569498825087968928162753848863396909959826280956121450994871701244516461260379029309120889086942028510640182154399457156805941872748998094254742173582401063677404595741785160829230135358081840096996372524230560855903700624271243416909004153690105933983835777939410970027753472000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python3 基础语法（上）</title>
      <link href="/2019/08/02/python3-ji-chu-yu-fa-shang/"/>
      <url>/2019/08/02/python3-ji-chu-yu-fa-shang/</url>
      
        <content type="html"><![CDATA[<h3 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h3><h4 id="什么是标识符"><a href="#什么是标识符" class="headerlink" title="什么是标识符"></a>什么是标识符</h4><blockquote><p><em>标识符（identifier）</em>是指<strong>用来标识某个实体的一个符号</strong>，在不同的应用环境下有不同的含义。在计算机编程语言中，标识符是用户编程时使用的名字，用于给变量、常量、函数、语句块等命名，以建立起名称与使用之间的关系。</p></blockquote><h4 id="标识符规则"><a href="#标识符规则" class="headerlink" title="标识符规则"></a>标识符规则</h4><p>标识符由字母、数字、下划线组成。</p><p>所有标识符可以包括英文、数字以及下划线（_），但不能以数字开头。</p><p>标识符对大小写敏感。</p><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> hello_110 <span class="token operator">=</span> <span class="token number">0</span>In <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> _110hello <span class="token operator">=</span> <span class="token number">0</span>In <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> 110_hello <span class="token operator">=</span> <span class="token number">0</span>  File <span class="token string">"&lt;ipython-input-7-98d382705aaa>"</span><span class="token punctuation">,</span> line <span class="token number">1</span>    110_hello <span class="token operator">=</span> <span class="token number">0</span>       <span class="token operator">^</span>SyntaxError<span class="token punctuation">:</span> invalid token</code></pre><h3 id="保留字"><a href="#保留字" class="headerlink" title="保留字"></a>保留字</h3><h4 id="什么是保留字"><a href="#什么是保留字" class="headerlink" title="什么是保留字"></a>什么是保留字</h4><blockquote><p><em>保留字(reserved word)</em>，指在高级语言中已经定义过的字，使用者不能再将这些字作为变量名或过程名使用。</p></blockquote><p><strong>保留字就是关键字。</strong></p><h4 id="如何查看关键字"><a href="#如何查看关键字" class="headerlink" title="如何查看关键字"></a>如何查看关键字</h4><blockquote><p>Python中有一个模块叫keyword，keyword中有两个成员：iskeyword 函数和 kwlist 列表（<strong>all</strong> = [“iskeyword”, “kwlist”]）。</p><p>其中kwlist中包含了所有的关键字，而iskeyword则用来查看某一个字符串是否是关键字。</p></blockquote><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">import</span> keyword   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span> keyword<span class="token punctuation">.</span>kwlistOut<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'False'</span><span class="token punctuation">,</span><span class="token string">'None'</span><span class="token punctuation">,</span><span class="token string">'True'</span><span class="token punctuation">,</span><span class="token string">'and'</span><span class="token punctuation">,</span><span class="token string">'as'</span><span class="token punctuation">,</span><span class="token string">'assert'</span><span class="token punctuation">,</span><span class="token string">'async'</span><span class="token punctuation">,</span><span class="token string">'await'</span><span class="token punctuation">,</span><span class="token string">'break'</span><span class="token punctuation">,</span><span class="token string">'class'</span><span class="token punctuation">,</span><span class="token string">'continue'</span><span class="token punctuation">,</span><span class="token string">'def'</span><span class="token punctuation">,</span><span class="token string">'del'</span><span class="token punctuation">,</span><span class="token string">'elif'</span><span class="token punctuation">,</span><span class="token string">'else'</span><span class="token punctuation">,</span><span class="token string">'except'</span><span class="token punctuation">,</span><span class="token string">'finally'</span><span class="token punctuation">,</span><span class="token string">'for'</span><span class="token punctuation">,</span><span class="token string">'from'</span><span class="token punctuation">,</span><span class="token string">'global'</span><span class="token punctuation">,</span><span class="token string">'if'</span><span class="token punctuation">,</span><span class="token string">'import'</span><span class="token punctuation">,</span><span class="token string">'in'</span><span class="token punctuation">,</span><span class="token string">'is'</span><span class="token punctuation">,</span><span class="token string">'lambda'</span><span class="token punctuation">,</span><span class="token string">'nonlocal'</span><span class="token punctuation">,</span><span class="token string">'not'</span><span class="token punctuation">,</span><span class="token string">'or'</span><span class="token punctuation">,</span><span class="token string">'pass'</span><span class="token punctuation">,</span><span class="token string">'raise'</span><span class="token punctuation">,</span><span class="token string">'return'</span><span class="token punctuation">,</span><span class="token string">'try'</span><span class="token punctuation">,</span><span class="token string">'while'</span><span class="token punctuation">,</span><span class="token string">'with'</span><span class="token punctuation">,</span><span class="token string">'yield'</span><span class="token punctuation">]</span>In <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> keyword<span class="token punctuation">.</span>iskeyword<span class="token punctuation">(</span><span class="token string">"int"</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token boolean">False</span>In <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> keyword<span class="token punctuation">.</span>iskeyword<span class="token punctuation">(</span><span class="token string">"is"</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token boolean">True</span></code></pre><h3 id="行与缩进"><a href="#行与缩进" class="headerlink" title="行与缩进"></a>行与缩进</h3><blockquote><p>Python 最具特色的就是使用缩进来表示代码块，不需要使用大括号 <strong>{}</strong> 来控制类，函数以及其他逻辑判断。缩进的空格数是可变的，但是<strong>同一个代码块的语句必须包含相同的缩进空格数。</strong></p></blockquote><pre class=" language-python"><code class="language-python"><span class="token keyword">if</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"true"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"false"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#正常        </span></code></pre><pre class=" language-python"><code class="language-python"><span class="token keyword">if</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"true"</span><span class="token punctuation">)</span>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"false"</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"2"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#IndentationError: unindent does not match any outer indentation level</span></code></pre><p><code>IndentationError: unindent does not match any outer indentation level</code>错误表明，你使用的缩进方式不一致，有的是 tab 键缩进，有的是空格缩进，改为一致即可。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">if</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"true"</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"false"</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"2"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#IndentationError: unexpected indent</span></code></pre><p><code>IndentationError: unexpected indent</code>错误, 则 Python 编译器是在告诉你你的文件里格式不对了，可能是tab和空格没对齐的问题，所有 Python 对格式要求非常严格。</p><h3 id="多行语句"><a href="#多行语句" class="headerlink" title="多行语句"></a>多行语句</h3><p>Python 通常是一行写完一条语句，但如果语句很长，我们可以使用反斜杠()来实现多行语句。</p><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> number <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">+</span> \   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span> <span class="token number">2</span> <span class="token operator">+</span> \   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span> <span class="token number">3</span>In <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> numberOut<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">6</span></code></pre><p>语句中包含 [], {} 或 () 括号就不需要使用多行连接符。</p><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> days <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'Monday'</span><span class="token punctuation">,</span> <span class="token string">'Tuesday'</span><span class="token punctuation">,</span> <span class="token string">'Wednesday'</span><span class="token punctuation">,</span>        <span class="token string">'Thursday'</span><span class="token punctuation">,</span> <span class="token string">'Friday'</span><span class="token punctuation">]</span>In <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> daysOut<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'Monday'</span><span class="token punctuation">,</span> <span class="token string">'Tuesday'</span><span class="token punctuation">,</span> <span class="token string">'Wednesday'</span><span class="token punctuation">,</span> <span class="token string">'Thursday'</span><span class="token punctuation">,</span> <span class="token string">'Friday'</span><span class="token punctuation">]</span></code></pre><h3 id="引号"><a href="#引号" class="headerlink" title="引号"></a>引号</h3><blockquote><p>Python 可以使用引号( <strong>‘</strong> )、双引号( <strong>“</strong> )、三引号( <strong>‘’’</strong> 或 <strong>“””</strong> ) 来表示字符串，引号的开始与结束必须的相同类型的。其中三引号可以由多行组成，编写多行文本的快捷语法，常用于文档字符串，在文件的特定地点，被当做注释。</p></blockquote><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> string1 <span class="token operator">=</span> <span class="token string">'hello'</span>In <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> string2 <span class="token operator">=</span> <span class="token string">"world"</span>In <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> string3 <span class="token operator">=</span> <span class="token triple-quoted-string string">"""helloworld"""</span>In <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> string4 <span class="token operator">=</span> 'hello"  File <span class="token string">"&lt;ipython-input-50-490b69049501>"</span><span class="token punctuation">,</span> line <span class="token number">1</span>    string4 <span class="token operator">=</span> 'hello"                     <span class="token operator">^</span>SyntaxError<span class="token punctuation">:</span> EOL <span class="token keyword">while</span> scanning string literal</code></pre><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p>Python 中单行注释采用 # 开头。</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#这是第一个注释</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"hello world"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#这是第二个注释</span><span class="token triple-quoted-string string">'''这是多行注释，使用单引号。这是多行注释，使用单引号。这是多行注释，使用单引号。'''</span><span class="token triple-quoted-string string">"""这是多行注释，使用双引号。这是多行注释，使用双引号。这是多行注释，使用双引号。"""</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
