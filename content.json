{"meta":{"title":"RainNenya","subtitle":"OUR OWN HEAVEN","description":"知识&技术&思考&成长","author":"Percy","url":"http://RainNenya.github.io"},"pages":[{"title":"404","date":"2019-07-19T08:41:10.000Z","updated":"2019-08-02T12:48:06.742Z","comments":true,"path":"404.html","permalink":"http://RainNenya.github.io/404.html","excerpt":"","text":""},{"title":"friends","date":"2019-08-01T14:17:27.000Z","updated":"2019-08-01T14:27:52.987Z","comments":true,"path":"friends/index.html","permalink":"http://RainNenya.github.io/friends/index.html","excerpt":"","text":""},{"title":"tags","date":"2019-08-01T14:14:36.000Z","updated":"2019-08-01T14:27:36.297Z","comments":true,"path":"tags/index.html","permalink":"http://RainNenya.github.io/tags/index.html","excerpt":"","text":""},{"title":"about","date":"2019-02-15T05:49:30.000Z","updated":"2019-08-01T14:28:15.717Z","comments":true,"path":"about/index.html","permalink":"http://RainNenya.github.io/about/index.html","excerpt":"","text":""},{"title":"categories","date":"2019-08-01T14:25:58.000Z","updated":"2019-08-01T14:27:16.623Z","comments":true,"path":"categories/index.html","permalink":"http://RainNenya.github.io/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"Fiddler 面板功能详解","slug":"Fiddler面板功能详解","date":"2019-08-30T13:01:37.000Z","updated":"2019-09-23T15:07:24.325Z","comments":true,"path":"2019/08/30/fiddler-mian-ban-gong-neng-xiang-jie/","link":"","permalink":"http://RainNenya.github.io/2019/08/30/fiddler-mian-ban-gong-neng-xiang-jie/","excerpt":"","text":"Fiddler简介 Fiddler是位于客户端和服务器端的HTTP代理，也是目前最常用的http抓包工具之一,它能够记录客户端和服务器之间的所有 HTTP请求，是web调试的利器。既然是代理，也就是说：客户端的所有请求都要先经过Fiddler，然后转发到相应的服务器，反之，服务器端的所有响应，也都会先经过Fiddler然后发送到客户端。 面版总览 菜单栏 Fiddler菜单栏，包括捕获http请求，停止捕获请求，保存http请求，载入本地session、设置捕获规则等功能。 工具栏 Fiddler的工具栏，包括Fiddler针对当前view的操作（暂停，清除session,decode模式、清除缓存等）。 会话面板 Web Session面板，主要是Fiddler抓取到的每条http请求（每一条称为一个session）,主要包含了请求的url，协议，状态码，body等信息。 Web Session列表栏 会话图标v4.x 会话图标v5.x 监控面板 Statistics HTTP请求的性能和其他数据分析 我们可以从中看出一些基本性能数据：如DNS解析的时间消耗是8ms,建立TCP/IP连接的时间消耗是8ms等等信息。 Inspector 提供headers、textview、hexview,Raw等多种方式查看单条http请求的请求报文的信息,分为上下两个部分，上半部分是请求头部分，下半部分是响应头部分。对于每一部分，提供了多种不同格式查看每个请求和响应的内容。 ImageView标签 JPG 格式使用 ImageView 就可以看到图片。选择一条Content-Type是image/jpeg的会话话,点击ImageView。 TextView 标签 HTML/JS/CSS 使用 TextView 可以看到响应的内容。选择一条Content-Type是text/html的回话,点击TextView。 Raw标签 Raw标签可以查看响应报文和响应正文,但是不包含请求报文。 Auth标签 Auth则可以查看授权Proxy-Authorization 和 Authorization的相关信息。 Cookies标签 Cookies标签可以看到请求的cookie和响应的set-cookie头信息。 AutoResponder Fiddler比较重要且比较强大的功能之一。可用于拦截某一请求，并重定向到本地的资源，或者使用Fiddler的内置响应。可用于调试服务器端代码而无需修改服务器端的代码和配置，因为拦截和重定向后，实际上访问的是本地的文件或者得到的是Fiddler的内置响应。 Composer 可以模拟向相应的服务器发送数据的过程（不错，这就是灌水机器人的基本原理,也可以是部分http flood的一种方式）。 Filters Filter标签则可以设置Fiddler的过滤规则，来达到过滤http请求的目的。最简单如：过滤内网http请求而只抓取internet的http请求，或则过滤相应域名的http请求。Fiddler的过滤器非常强大，可以过滤特定http状态码的请求，可以过滤特定请求类型的http请求（如css请求，image请求，js请求等），可以过滤请求报文大于或则小于指定大小（byte）的请求。 状态面板 参考文章1：Fiddler - -面板和数据包图标详解 参考文章2：Fiddler界面详情","categories":[{"name":"工具","slug":"工具","permalink":"http://RainNenya.github.io/categories/工具/"}],"tags":[{"name":"Fiddler","slug":"Fiddler","permalink":"http://RainNenya.github.io/tags/Fiddler/"}]}]}